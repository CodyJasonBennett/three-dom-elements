{"version":3,"file":"index.module.js","sources":["../src/objects/DOMElement.js","../src/constants.js","../src/renderers/DOMContext.js"],"sourcesContent":["import {\n  Mesh,\n  PlaneGeometry,\n  MeshBasicMaterial,\n  NoBlending,\n  DoubleSide,\n} from 'three';\nimport { CSS3DObject } from 'three/examples/jsm/renderers/CSS3DRenderer.js';\nimport { cssFactor } from '../constants.js';\n\nclass DOMElement extends Mesh {\n  constructor(\n    context,\n    domElement,\n    { elementWidth = 768, width = 1, height = 0.75 } = {}\n  ) {\n    const geometry = new PlaneGeometry(width, height);\n    const material = new MeshBasicMaterial({\n      opacity: 0,\n      color: 0xffffff,\n      blending: NoBlending,\n      side: DoubleSide,\n    });\n\n    super(geometry, material);\n\n    this.domElement = domElement;\n    this.aspectRatio = height / width;\n    this.elementWidth = elementWidth;\n    this.elementHeight = this.elementWidth * this.aspectRatio;\n    this.width = width;\n    this.height = height;\n\n    this.resizeDomElement();\n\n    this.cssObject = new CSS3DObject(this.domElement);\n    this.cssObject.scale.multiplyScalar(cssFactor / (this.elementWidth / this.width));\n\n    this.addEventListener('added', () => context.cssScene.add(this.cssObject));\n    this.addEventListener('removed', () => context.cssScene.remove(this.cssObject));\n\n    this.update = this.update.bind(this);\n  }\n\n  resizeDomElement() {\n    this.domElement.style.width = `${this.elementWidth}px`;\n    this.domElement.style.height = `${this.elementHeight}px`;\n  }\n\n  setDomElement(domElement) {\n    if (this.domElement.parentNode) {\n      this.domElement.parentNode.removeChild(this.domElement);\n    }\n\n    this.domElement = domElement;\n    this.cssObject.element = domElement;\n\n    this.resizeDomElement();\n  }\n\n  update() {\n    this.updateMatrixWorld();\n    const worldMatrix = this.matrixWorld;\n\n    worldMatrix.decompose(this.position, this.quaternion, this.scale);\n\n    this.cssObject.quaternion.copy(this.quaternion);\n    this.cssObject.position.copy(this.position).multiplyScalar(cssFactor);\n\n    const scaleFactor =\n      this.elementWidth / (this.geometry.parameters.width * this.scale.x);\n\n    this.cssObject.scale.multiplyScalar(cssFactor / scaleFactor);\n    this.cssObject.visible = this.visible;\n  }\n}\n\nexport default DOMElement;\n","export const cssFactor = 100;\r\n","import { PerspectiveCamera, Scene } from 'three';\r\nimport { CSS3DRenderer } from 'three/examples/jsm/renderers/CSS3DRenderer.js';\r\nimport { cssFactor } from '../constants.js';\r\n\r\nclass DOMContext {\r\n  constructor(camera) {\r\n    this.enabled = true;\r\n\r\n    this.cssRenderer = new CSS3DRenderer();\r\n    this.domElement = this.cssRenderer.domElement;\r\n\r\n    this.cssCamera = new PerspectiveCamera(\r\n      camera.fov,\r\n      camera.aspect,\r\n      camera.near * cssFactor,\r\n      camera.far * cssFactor\r\n    );\r\n    this.camera = camera;\r\n\r\n    this.cssScene = new Scene();\r\n\r\n    this.update = this.update.bind(this);\r\n  }\r\n\r\n  setSize(width, height) {\r\n    this.cssRenderer.setSize(width, height);\r\n    this.cssCamera.aspect = width / height;\r\n    this.cssCamera.updateProjectionMatrix();\r\n  }\r\n\r\n  update() {\r\n    this.cssCamera.quaternion.copy(this.camera.quaternion);\r\n    this.cssCamera.position.copy(this.camera.position).multiplyScalar(cssFactor);\r\n\r\n    if (this.enabled) {\r\n      this.cssScene.traverse(child => {\r\n        if (!child.update) return;\r\n\r\n        child.update();\r\n      });\r\n    }\r\n\r\n    this.cssRenderer.render(this.cssScene, this.cssCamera);\r\n  }\r\n}\r\n\r\nexport default DOMContext;\r\n"],"names":["DOMElement","context","domElement","elementWidth","width","height","geometry","PlaneGeometry","material","MeshBasicMaterial","opacity","color","blending","NoBlending","side","DoubleSide","_this","aspectRatio","elementHeight","resizeDomElement","cssObject","CSS3DObject","scale","multiplyScalar","addEventListener","cssScene","add","remove","update","bind","this","style","setDomElement","parentNode","removeChild","element","updateMatrixWorld","matrixWorld","decompose","position","quaternion","copy","parameters","x","visible","Mesh","DOMContext","camera","enabled","cssRenderer","CSS3DRenderer","cssCamera","PerspectiveCamera","fov","aspect","near","far","Scene","setSize","updateProjectionMatrix","traverse","child","render"],"mappings":"4OAUMA,sBACJ,WACEC,EACAC,wBACmD,SAAjDC,aAAAA,aAAe,UAAKC,MAAAA,aAAQ,QAAGC,OAAAA,aAAS,MAEpCC,EAAW,IAAIC,EAAcH,EAAOC,GACpCG,EAAW,IAAIC,EAAkB,CACrCC,QAAS,EACTC,MAAO,SACPC,SAAUC,EACVC,KAAMC,IANR,OASAC,cAAMV,EAAUE,UAEXN,WAAaA,EAClBc,EAAKC,YAAcZ,EAASD,EAC5BY,EAAKb,aAAeA,EACpBa,EAAKE,cAAgBF,EAAKb,aAAea,EAAKC,YAC9CD,EAAKZ,MAAQA,EACbY,EAAKX,OAASA,EAEdW,EAAKG,mBAELH,EAAKI,UAAY,IAAIC,EAAYL,EAAKd,YACtCc,EAAKI,UAAUE,MAAMC,eCpCA,KDoC4BP,EAAKb,aAAea,EAAKZ,QAE1EY,EAAKQ,iBAAiB,QAAS,kBAAMvB,EAAQwB,SAASC,IAAIV,EAAKI,aAC/DJ,EAAKQ,iBAAiB,UAAW,kBAAMvB,EAAQwB,SAASE,OAAOX,EAAKI,aAEpEJ,EAAKY,OAASZ,EAAKY,OAAOC,uPAG5BV,iBAAA,WACEW,KAAK5B,WAAW6B,MAAM3B,MAAW0B,KAAK3B,kBACtC2B,KAAK5B,WAAW6B,MAAM1B,OAAYyB,KAAKZ,sBAGzCc,cAAA,SAAc9B,GACR4B,KAAK5B,WAAW+B,YAClBH,KAAK5B,WAAW+B,WAAWC,YAAYJ,KAAK5B,YAG9C4B,KAAK5B,WAAaA,EAClB4B,KAAKV,UAAUe,QAAUjC,EAEzB4B,KAAKX,sBAGPS,OAAA,WACEE,KAAKM,oBACeN,KAAKO,YAEbC,UAAUR,KAAKS,SAAUT,KAAKU,WAAYV,KAAKR,OAE3DQ,KAAKV,UAAUoB,WAAWC,KAAKX,KAAKU,YACpCV,KAAKV,UAAUmB,SAASE,KAAKX,KAAKS,UAAUhB,eCnEvB,KDwErBO,KAAKV,UAAUE,MAAMC,eCxEA,KDsEnBO,KAAK3B,cAAgB2B,KAAKxB,SAASoC,WAAWtC,MAAQ0B,KAAKR,MAAMqB,KAGnEb,KAAKV,UAAUwB,QAAUd,KAAKc,YA/DTC,GENnBC,aACJ,WAAYC,GACVjB,KAAKkB,SAAU,EAEflB,KAAKmB,YAAc,IAAIC,EACvBpB,KAAK5B,WAAa4B,KAAKmB,YAAY/C,WAEnC4B,KAAKqB,UAAY,IAAIC,EACnBL,EAAOM,IACPN,EAAOO,ODbY,ICcnBP,EAAOQ,KDdY,ICenBR,EAAOS,KAET1B,KAAKiB,OAASA,EAEdjB,KAAKL,SAAW,IAAIgC,EAEpB3B,KAAKF,OAASE,KAAKF,OAAOC,KAAKC,iCAGjC4B,QAAA,SAAQtD,EAAOC,GACbyB,KAAKmB,YAAYS,QAAQtD,EAAOC,GAChCyB,KAAKqB,UAAUG,OAASlD,EAAQC,EAChCyB,KAAKqB,UAAUQ,4BAGjB/B,OAAA,WACEE,KAAKqB,UAAUX,WAAWC,KAAKX,KAAKiB,OAAOP,YAC3CV,KAAKqB,UAAUZ,SAASE,KAAKX,KAAKiB,OAAOR,UAAUhB,eDhC9B,KCkCjBO,KAAKkB,SACPlB,KAAKL,SAASmC,SAAS,SAAAC,GAChBA,EAAMjC,QAEXiC,EAAMjC,WAIVE,KAAKmB,YAAYa,OAAOhC,KAAKL,SAAUK,KAAKqB"}