var e=require("three"),t=require("three/examples/jsm/renderers/CSS3DRenderer.js"),s=function(s){var i,n;function r(i,n,r){var o,a=void 0===r?{}:r,c=a.elementWidth,h=void 0===c?768:c,d=a.width,l=void 0===d?1:d,m=a.height,p=void 0===m?.75:m,u=new e.PlaneGeometry(l,p),b=new e.MeshBasicMaterial({opacity:0,color:16777215,blending:e.NoBlending,side:e.DoubleSide});return(o=s.call(this,u,b)||this).domElement=n,o.aspectRatio=p/l,o.elementWidth=h,o.elementHeight=o.elementWidth*o.aspectRatio,o.width=l,o.height=p,o.position=new e.Vector3,o.scale=new e.Vector3,o.quaternion=new e.Quaternion,o.resizeDomElement(),o.cssObject=new t.CSS3DObject(o.domElement),o.cssObject.scale.multiplyScalar(100/(o.elementWidth/o.width)),o.addEventListener("added",function(){return i.cssScene.add(o.cssObject)}),o.addEventListener("removed",function(){return i.cssScene.remove(o.cssObject)}),o.update=o.update.bind(function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(o)),o}n=s,(i=r).prototype=Object.create(n.prototype),i.prototype.constructor=i,i.__proto__=n;var o=r.prototype;return o.resizeDomElement=function(){this.domElement.style.width=this.elementWidth+"px",this.domElement.style.height=this.elementHeight+"px"},o.setDomElement=function(e){this.domElement.parentNode&&this.domElement.parentNode.removeChild(this.domElement),this.domElement=e,this.cssObject.element=e,this.resizeDomElement()},o.update=function(){this.updateMatrixWorld(),this.matrixWorld.decompose(this.position,this.quaternion,this.scale),this.cssObject.quaternion.copy(this.quaternion),this.cssObject.position.copy(this.position).multiplyScalar(100),this.cssObject.scale.multiplyScalar(100/(this.elementWidth/(this.geometry.parameters.width*this.scale.x))),this.cssObject.visible=this.visible},r}(e.Mesh);exports.DOMContext=function(){function s(s){this.enabled=!0,this.cssRenderer=new t.CSS3DRenderer,this.domElement=this.cssRenderer.domElement,this.cssCamera=new e.PerspectiveCamera(s.fov,s.aspect,100*s.near,100*s.far),this.camera=s,this.cssScene=new e.Scene,this.update=this.update.bind(this)}var i=s.prototype;return i.setSize=function(e,t){this.cssRenderer.setSize(e,t),this.cssCamera.aspect=e/t,this.cssCamera.updateProjectionMatrix()},i.update=function(){this.cssCamera.quaternion.copy(this.camera.quaternion),this.cssCamera.position.copy(this.camera.position).multiplyScalar(100),this.enabled&&this.cssScene.traverse(function(e){e.update&&e.update()}),this.cssRenderer.render(this.cssScene,this.cssCamera)},s}(),exports.DOMElement=s;
//# sourceMappingURL=index.js.map
