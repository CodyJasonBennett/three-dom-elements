{"version":3,"file":"index.js","sources":["../src/objects/DOMElement.js","../src/constants.js","../src/renderers/DOMContext.js"],"sourcesContent":["import {\n  Mesh,\n  PlaneGeometry,\n  MeshBasicMaterial,\n  NoBlending,\n  DoubleSide,\n  Vector3,\n  Quaternion,\n} from 'three';\nimport { CSS3DObject } from 'three/examples/jsm/renderers/CSS3DRenderer.js';\nimport { cssFactor } from '../constants.js';\n\nclass DOMElement extends Mesh {\n  constructor(\n    context,\n    domElement,\n    { elementWidth = 768, width = 1, height = 0.75 } = {}\n  ) {\n    const geometry = new PlaneGeometry(width, height);\n    const material = new MeshBasicMaterial({\n      opacity: 0,\n      color: 0xffffff,\n      blending: NoBlending,\n      side: DoubleSide,\n    });\n\n    super(geometry, material);\n\n    this.domElement = domElement;\n    this.aspectRatio = height / width;\n    this.elementWidth = elementWidth;\n    this.elementHeight = this.elementWidth * this.aspectRatio;\n    this.width = width;\n    this.height = height;\n\n    this.position = new Vector3();\n    this.scale = new Vector3();\n    this.quaternion = new Quaternion();\n\n    this.resizeDomElement();\n\n    this.cssObject = new CSS3DObject(this.domElement);\n    this.cssObject.scale.multiplyScalar(cssFactor / (this.elementWidth / this.width));\n\n    this.addEventListener('added', () => context.cssScene.add(this.cssObject));\n    this.addEventListener('removed', () => context.cssScene.remove(this.cssObject));\n\n    this.update = this.update.bind(this);\n  }\n\n  resizeDomElement() {\n    this.domElement.style.width = `${this.elementWidth}px`;\n    this.domElement.style.height = `${this.elementHeight}px`;\n  }\n\n  setDomElement(domElement) {\n    if (this.domElement.parentNode) {\n      this.domElement.parentNode.removeChild(this.domElement);\n    }\n\n    this.domElement = domElement;\n    this.cssObject.element = domElement;\n\n    this.resizeDomElement();\n  }\n\n  update() {\n    this.updateMatrixWorld();\n    const worldMatrix = this.matrixWorld;\n\n    worldMatrix.decompose(this.position, this.quaternion, this.scale);\n\n    this.cssObject.quaternion.copy(this.quaternion);\n    this.cssObject.position.copy(this.position).multiplyScalar(cssFactor);\n\n    const scaleFactor =\n      this.elementWidth / (this.geometry.parameters.width * this.scale.x);\n\n    this.cssObject.scale.multiplyScalar(cssFactor / scaleFactor);\n    this.cssObject.visible = this.visible;\n  }\n}\n\nexport default DOMElement;\n","export const cssFactor = 100;\r\n","import { PerspectiveCamera, Scene } from 'three';\r\nimport { CSS3DRenderer } from 'three/examples/jsm/renderers/CSS3DRenderer.js';\r\nimport { cssFactor } from '../constants.js';\r\n\r\nclass DOMContext {\r\n  constructor(camera) {\r\n    this.enabled = true;\r\n\r\n    this.cssRenderer = new CSS3DRenderer();\r\n    this.domElement = this.cssRenderer.domElement;\r\n\r\n    this.cssCamera = new PerspectiveCamera(\r\n      camera.fov,\r\n      camera.aspect,\r\n      camera.near * cssFactor,\r\n      camera.far * cssFactor\r\n    );\r\n    this.camera = camera;\r\n\r\n    this.cssScene = new Scene();\r\n\r\n    this.update = this.update.bind(this);\r\n  }\r\n\r\n  setSize(width, height) {\r\n    this.cssRenderer.setSize(width, height);\r\n    this.cssCamera.aspect = width / height;\r\n    this.cssCamera.updateProjectionMatrix();\r\n  }\r\n\r\n  update() {\r\n    this.cssCamera.quaternion.copy(this.camera.quaternion);\r\n    this.cssCamera.position.copy(this.camera.position).multiplyScalar(cssFactor);\r\n\r\n    if (this.enabled) {\r\n      this.cssScene.traverse(child => {\r\n        if (!child.update) return;\r\n\r\n        child.update();\r\n      });\r\n    }\r\n\r\n    this.cssRenderer.render(this.cssScene, this.cssCamera);\r\n  }\r\n}\r\n\r\nexport default DOMContext;\r\n"],"names":["DOMElement","context","domElement","elementWidth","width","height","geometry","PlaneGeometry","material","MeshBasicMaterial","opacity","color","blending","NoBlending","side","DoubleSide","_this","aspectRatio","elementHeight","position","Vector3","scale","quaternion","Quaternion","resizeDomElement","cssObject","CSS3DObject","multiplyScalar","addEventListener","cssScene","add","remove","update","bind","this","style","setDomElement","parentNode","removeChild","element","updateMatrixWorld","matrixWorld","decompose","copy","parameters","x","visible","Mesh","camera","enabled","cssRenderer","CSS3DRenderer","cssCamera","PerspectiveCamera","fov","aspect","near","far","Scene","setSize","updateProjectionMatrix","traverse","child","render"],"mappings":"kFAYMA,sBACJ,WACEC,EACAC,wBACmD,SAAjDC,aAAAA,aAAe,UAAKC,MAAAA,aAAQ,QAAGC,OAAAA,aAAS,MAEpCC,EAAW,IAAIC,gBAAcH,EAAOC,GACpCG,EAAW,IAAIC,oBAAkB,CACrCC,QAAS,EACTC,MAAO,SACPC,SAAUC,aACVC,KAAMC,eANR,OASAC,cAAMV,EAAUE,UAEXN,WAAaA,EAClBc,EAAKC,YAAcZ,EAASD,EAC5BY,EAAKb,aAAeA,EACpBa,EAAKE,cAAgBF,EAAKb,aAAea,EAAKC,YAC9CD,EAAKZ,MAAQA,EACbY,EAAKX,OAASA,EAEdW,EAAKG,SAAW,IAAIC,UACpBJ,EAAKK,MAAQ,IAAID,UACjBJ,EAAKM,WAAa,IAAIC,aAEtBP,EAAKQ,mBAELR,EAAKS,UAAY,IAAIC,cAAYV,EAAKd,YACtCc,EAAKS,UAAUJ,MAAMM,eC1CA,KD0C4BX,EAAKb,aAAea,EAAKZ,QAE1EY,EAAKY,iBAAiB,QAAS,kBAAM3B,EAAQ4B,SAASC,IAAId,EAAKS,aAC/DT,EAAKY,iBAAiB,UAAW,kBAAM3B,EAAQ4B,SAASE,OAAOf,EAAKS,aAEpET,EAAKgB,OAAShB,EAAKgB,OAAOC,uPAG5BT,iBAAA,WACEU,KAAKhC,WAAWiC,MAAM/B,MAAW8B,KAAK/B,kBACtC+B,KAAKhC,WAAWiC,MAAM9B,OAAY6B,KAAKhB,sBAGzCkB,cAAA,SAAclC,GACRgC,KAAKhC,WAAWmC,YAClBH,KAAKhC,WAAWmC,WAAWC,YAAYJ,KAAKhC,YAG9CgC,KAAKhC,WAAaA,EAClBgC,KAAKT,UAAUc,QAAUrC,EAEzBgC,KAAKV,sBAGPQ,OAAA,WACEE,KAAKM,oBACeN,KAAKO,YAEbC,UAAUR,KAAKf,SAAUe,KAAKZ,WAAYY,KAAKb,OAE3Da,KAAKT,UAAUH,WAAWqB,KAAKT,KAAKZ,YACpCY,KAAKT,UAAUN,SAASwB,KAAKT,KAAKf,UAAUQ,eCzEvB,KD8ErBO,KAAKT,UAAUJ,MAAMM,eC9EA,KD4EnBO,KAAK/B,cAAgB+B,KAAK5B,SAASsC,WAAWxC,MAAQ8B,KAAKb,MAAMwB,KAGnEX,KAAKT,UAAUqB,QAAUZ,KAAKY,YAnETC,sCEPvB,WAAYC,GACVd,KAAKe,SAAU,EAEff,KAAKgB,YAAc,IAAIC,gBACvBjB,KAAKhC,WAAagC,KAAKgB,YAAYhD,WAEnCgC,KAAKkB,UAAY,IAAIC,oBACnBL,EAAOM,IACPN,EAAOO,ODbY,ICcnBP,EAAOQ,KDdY,ICenBR,EAAOS,KAETvB,KAAKc,OAASA,EAEdd,KAAKL,SAAW,IAAI6B,QAEpBxB,KAAKF,OAASE,KAAKF,OAAOC,KAAKC,iCAGjCyB,QAAA,SAAQvD,EAAOC,GACb6B,KAAKgB,YAAYS,QAAQvD,EAAOC,GAChC6B,KAAKkB,UAAUG,OAASnD,EAAQC,EAChC6B,KAAKkB,UAAUQ,4BAGjB5B,OAAA,WACEE,KAAKkB,UAAU9B,WAAWqB,KAAKT,KAAKc,OAAO1B,YAC3CY,KAAKkB,UAAUjC,SAASwB,KAAKT,KAAKc,OAAO7B,UAAUQ,eDhC9B,KCkCjBO,KAAKe,SACPf,KAAKL,SAASgC,SAAS,SAAAC,GAChBA,EAAM9B,QAEX8B,EAAM9B,WAIVE,KAAKgB,YAAYa,OAAO7B,KAAKL,SAAUK,KAAKkB"}