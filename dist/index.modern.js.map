{"version":3,"file":"index.modern.js","sources":["../src/objects/DOMElement.js","../src/constants.js","../src/renderers/DOMContext.js"],"sourcesContent":["import {\n  Mesh,\n  PlaneGeometry,\n  MeshBasicMaterial,\n  NoBlending,\n  DoubleSide,\n  Vector3,\n  Quaternion,\n} from 'three';\nimport { CSS3DObject } from 'three/examples/jsm/renderers/CSS3DRenderer.js';\nimport { cssFactor } from '../constants.js';\n\nclass DOMElement extends Mesh {\n  constructor(\n    context,\n    domElement,\n    { elementWidth = 768, width = 1, height = 0.75 } = {}\n  ) {\n    const geometry = new PlaneGeometry(width, height);\n    const material = new MeshBasicMaterial({\n      opacity: 0,\n      color: 0xffffff,\n      blending: NoBlending,\n      side: DoubleSide,\n    });\n\n    super(geometry, material);\n\n    this.domElement = domElement;\n    this.aspectRatio = height / width;\n    this.elementWidth = elementWidth;\n    this.elementHeight = this.elementWidth * this.aspectRatio;\n    this.width = width;\n    this.height = height;\n\n    this.position = new Vector3();\n    this.scale = new Vector3();\n    this.quaternion = new Quaternion();\n\n    this.resizeDomElement();\n\n    this.cssObject = new CSS3DObject(this.domElement);\n    this.cssObject.scale.multiplyScalar(cssFactor / (this.elementWidth / this.width));\n\n    this.addEventListener('added', () => context.cssScene.add(this.cssObject));\n    this.addEventListener('removed', () => context.cssScene.remove(this.cssObject));\n\n    this.update = this.update.bind(this);\n  }\n\n  resizeDomElement() {\n    this.domElement.style.width = `${this.elementWidth}px`;\n    this.domElement.style.height = `${this.elementHeight}px`;\n  }\n\n  setDomElement(domElement) {\n    if (this.domElement.parentNode) {\n      this.domElement.parentNode.removeChild(this.domElement);\n    }\n\n    this.domElement = domElement;\n    this.cssObject.element = domElement;\n\n    this.resizeDomElement();\n  }\n\n  update() {\n    this.updateMatrixWorld();\n    const worldMatrix = this.matrixWorld;\n\n    worldMatrix.decompose(this.position, this.quaternion, this.scale);\n\n    this.cssObject.quaternion.copy(this.quaternion);\n    this.cssObject.position.copy(this.position).multiplyScalar(cssFactor);\n\n    const scaleFactor =\n      this.elementWidth / (this.geometry.parameters.width * this.scale.x);\n\n    this.cssObject.scale.multiplyScalar(cssFactor / scaleFactor);\n    this.cssObject.visible = this.visible;\n  }\n}\n\nexport default DOMElement;\n","export const cssFactor = 100;\r\n","import { PerspectiveCamera, Scene } from 'three';\r\nimport { CSS3DRenderer } from 'three/examples/jsm/renderers/CSS3DRenderer.js';\r\nimport { cssFactor } from '../constants.js';\r\n\r\nclass DOMContext {\r\n  constructor(camera) {\r\n    this.enabled = true;\r\n\r\n    this.cssRenderer = new CSS3DRenderer();\r\n    this.domElement = this.cssRenderer.domElement;\r\n\r\n    this.cssCamera = new PerspectiveCamera(\r\n      camera.fov,\r\n      camera.aspect,\r\n      camera.near * cssFactor,\r\n      camera.far * cssFactor\r\n    );\r\n    this.camera = camera;\r\n\r\n    this.cssScene = new Scene();\r\n\r\n    this.update = this.update.bind(this);\r\n  }\r\n\r\n  setSize(width, height) {\r\n    this.cssRenderer.setSize(width, height);\r\n    this.cssCamera.aspect = width / height;\r\n    this.cssCamera.updateProjectionMatrix();\r\n  }\r\n\r\n  update() {\r\n    this.cssCamera.quaternion.copy(this.camera.quaternion);\r\n    this.cssCamera.position.copy(this.camera.position).multiplyScalar(cssFactor);\r\n\r\n    if (this.enabled) {\r\n      this.cssScene.traverse(child => {\r\n        if (!child.update) return;\r\n\r\n        child.update();\r\n      });\r\n    }\r\n\r\n    this.cssRenderer.render(this.cssScene, this.cssCamera);\r\n  }\r\n}\r\n\r\nexport default DOMContext;\r\n"],"names":["DOMElement","Mesh","constructor","context","domElement","elementWidth","width","height","super","PlaneGeometry","MeshBasicMaterial","opacity","color","blending","NoBlending","side","DoubleSide","this","aspectRatio","elementHeight","position","Vector3","scale","quaternion","Quaternion","resizeDomElement","cssObject","CSS3DObject","multiplyScalar","addEventListener","cssScene","add","remove","update","bind","style","setDomElement","parentNode","removeChild","element","updateMatrixWorld","matrixWorld","decompose","copy","geometry","parameters","x","visible","DOMContext","camera","enabled","cssRenderer","CSS3DRenderer","cssCamera","PerspectiveCamera","fov","aspect","near","far","Scene","setSize","updateProjectionMatrix","traverse","child","render"],"mappings":"qQAYA,MAAMA,UAAmBC,EACvBC,YACEC,EACAC,GACAC,aAAEA,EAAe,IAAjBC,MAAsBA,EAAQ,EAA9BC,OAAiCA,EAAS,KAAS,IAUnDC,MARiB,IAAIC,EAAcH,EAAOC,GACzB,IAAIG,EAAkB,CACrCC,QAAS,EACTC,MAAO,SACPC,SAAUC,EACVC,KAAMC,KAKRC,KAAKb,WAAaA,EAClBa,KAAKC,YAAcX,EAASD,EAC5BW,KAAKZ,aAAeA,EACpBY,KAAKE,cAAgBF,KAAKZ,aAAeY,KAAKC,YAC9CD,KAAKX,MAAQA,EACbW,KAAKV,OAASA,EAEdU,KAAKG,SAAW,IAAIC,EACpBJ,KAAKK,MAAQ,IAAID,EACjBJ,KAAKM,WAAa,IAAIC,EAEtBP,KAAKQ,mBAELR,KAAKS,UAAY,IAAIC,EAAYV,KAAKb,YACtCa,KAAKS,UAAUJ,MAAMM,eC1CA,KD0C4BX,KAAKZ,aAAeY,KAAKX,QAE1EW,KAAKY,iBAAiB,QAAS,IAAM1B,EAAQ2B,SAASC,IAAId,KAAKS,YAC/DT,KAAKY,iBAAiB,UAAW,IAAM1B,EAAQ2B,SAASE,OAAOf,KAAKS,YAEpET,KAAKgB,OAAShB,KAAKgB,OAAOC,KAAKjB,MAGjCQ,mBACER,KAAKb,WAAW+B,MAAM7B,MAAS,GAAEW,KAAKZ,iBACtCY,KAAKb,WAAW+B,MAAM5B,OAAU,GAAEU,KAAKE,kBAGzCiB,cAAchC,GACRa,KAAKb,WAAWiC,YAClBpB,KAAKb,WAAWiC,WAAWC,YAAYrB,KAAKb,YAG9Ca,KAAKb,WAAaA,EAClBa,KAAKS,UAAUa,QAAUnC,EAEzBa,KAAKQ,mBAGPQ,SACEhB,KAAKuB,oBACevB,KAAKwB,YAEbC,UAAUzB,KAAKG,SAAUH,KAAKM,WAAYN,KAAKK,OAE3DL,KAAKS,UAAUH,WAAWoB,KAAK1B,KAAKM,YACpCN,KAAKS,UAAUN,SAASuB,KAAK1B,KAAKG,UAAUQ,eCzEvB,KD8ErBX,KAAKS,UAAUJ,MAAMM,eC9EA,KD4EnBX,KAAKZ,cAAgBY,KAAK2B,SAASC,WAAWvC,MAAQW,KAAKK,MAAMwB,KAGnE7B,KAAKS,UAAUqB,QAAU9B,KAAK8B,SE3ElC,MAAMC,EACJ9C,YAAY+C,GACVhC,KAAKiC,SAAU,EAEfjC,KAAKkC,YAAc,IAAIC,EACvBnC,KAAKb,WAAaa,KAAKkC,YAAY/C,WAEnCa,KAAKoC,UAAY,IAAIC,EACnBL,EAAOM,IACPN,EAAOO,ODbY,ICcnBP,EAAOQ,KDdY,ICenBR,EAAOS,KAETzC,KAAKgC,OAASA,EAEdhC,KAAKa,SAAW,IAAI6B,EAEpB1C,KAAKgB,OAAShB,KAAKgB,OAAOC,KAAKjB,MAGjC2C,QAAQtD,EAAOC,GACbU,KAAKkC,YAAYS,QAAQtD,EAAOC,GAChCU,KAAKoC,UAAUG,OAASlD,EAAQC,EAChCU,KAAKoC,UAAUQ,yBAGjB5B,SACEhB,KAAKoC,UAAU9B,WAAWoB,KAAK1B,KAAKgC,OAAO1B,YAC3CN,KAAKoC,UAAUjC,SAASuB,KAAK1B,KAAKgC,OAAO7B,UAAUQ,eDhC9B,KCkCjBX,KAAKiC,SACPjC,KAAKa,SAASgC,SAASC,IAChBA,EAAM9B,QAEX8B,EAAM9B,WAIVhB,KAAKkC,YAAYa,OAAO/C,KAAKa,SAAUb,KAAKoC"}